{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Concordiae\\\\Desktop\\\\rpg.academy\\\\rpg-academy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Concordiae\\\\Desktop\\\\rpg.academy\\\\rpg-academy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Concordiae\\\\Desktop\\\\rpg.academy\\\\rpg-academy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Concordiae\\\\Desktop\\\\rpg.academy\\\\rpg-academy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Concordiae\\\\Desktop\\\\rpg.academy\\\\rpg-academy\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Concordiae\\\\Desktop\\\\rpg.academy\\\\rpg-academy\\\\client\\\\src\\\\components\\\\SignIn\\\\index.js\";\nimport React, { Component } from 'react';\nimport test from '../../images/test.png';\n\nvar ThemeSwitcher =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThemeSwitcher, _Component);\n\n  function ThemeSwitcher() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ThemeSwitcher);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ThemeSwitcher)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      theme: null\n    };\n\n    _this.resetTheme = function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        theme: null\n      });\n    };\n\n    _this.chooseTheme = function (theme, evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        theme: theme\n      });\n    };\n\n    _this.test = function () {\n      console.log(\"hiya\");\n    };\n\n    return _this;\n  }\n\n  _createClass(ThemeSwitcher, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var theme = this.state.theme;\n      var themeclassName = theme ? theme.toLowerCase() : 'secondary';\n      return React.createElement(\"div\", {\n        classNameName: \"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        classNameName: \"h1 mb-4 w-100 text-center text-\".concat(themeclassName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, theme || 'Path of Exile'), React.createElement(\"div\", {\n        classNameName: \"btn-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        classNameName: \"btn btn-\".concat(themeclassName, \" btn-lg\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, theme || 'Choose', \" className\"), React.createElement(\"button\", {\n        onClick: this.test,\n        type: \"button\",\n        classNameName: \"btn btn-\".concat(themeclassName, \" btn-lg dropdown-toggle dropdown-toggle-split\"),\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        classNameName: \"sr-only\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Toggle Theme Dropdown\")), React.createElement(\"div\", {\n        classNameName: \"dropdown-menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        classNameName: \"dropdown-item\",\n        onClick: function onClick(e) {\n          return _this2.chooseTheme('Primary', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Primary Theme\"), React.createElement(\"button\", {\n        classNameName: \"dropdown-item\",\n        onClick: function onClick(e) {\n          return _this2.chooseTheme('Danger', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Danger Theme\"), React.createElement(\"button\", {\n        classNameName: \"dropdown-item\",\n        onClick: function onClick(e) {\n          return _this2.chooseTheme('Success', e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Success Theme\"), React.createElement(\"div\", {\n        classNameName: \"dropdown-divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        classNameName: \"dropdown-item\",\n        onClick: this.resetTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Default Theme\"))));\n    }\n  }]);\n\n  return ThemeSwitcher;\n}(Component);\n\nexport default ThemeSwitcher;","map":{"version":3,"sources":["C:\\Users\\Concordiae\\Desktop\\rpg.academy\\rpg-academy\\client\\src\\components\\SignIn\\index.js"],"names":["React","Component","test","ThemeSwitcher","state","theme","resetTheme","evt","preventDefault","setState","chooseTheme","console","log","themeclassName","toLowerCase","e"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;IAEMC,a;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;;UAERC,U,GAAa,UAAAC,GAAG,EAAI;AAClBA,MAAAA,GAAG,CAACC,cAAJ;;AACA,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,K;;UAEDK,W,GAAc,UAACL,KAAD,EAAQE,GAAR,EAAgB;AAC5BA,MAAAA,GAAG,CAACC,cAAJ;;AACA,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;UAEDH,I,GAAO,YAAM;AACXS,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,UAECP,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAGP,UAAMQ,cAAc,GAAGR,KAAK,GAAGA,KAAK,CAACS,WAAN,EAAH,GAAyB,WAArD;AAEA,aAEE;AAAK,QAAA,aAAa,EAAC,+GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAM,QAAA,aAAa,2CAAoCD,cAApC,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2ER,KAAK,IAAI,eAApF,CAFF,EAIE;AAAK,QAAA,aAAa,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAS,QAAA,IAAI,EAAC,QAAd;AAAuB,QAAA,aAAa,oBAAaQ,cAAb,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4ER,KAAK,IAAI,QAArF,eAFF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKH,IAAtB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAA0C,QAAA,aAAa,oBAAaW,cAAb,kDAAvD;AAAmI,uBAAY,UAA/I;AAA0J,yBAAc,MAAxK;AAA+K,yBAAc,OAA7L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,aAAa,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CAJF,EAQE;AAAK,QAAA,aAAa,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAQ,QAAA,aAAa,EAAC,eAAtB;AAAuC,QAAA,OAAO,EAAE,iBAAAE,CAAC;AAAA,iBAAI,MAAI,CAACL,WAAL,CAAiB,SAAjB,EAA4BK,CAA5B,CAAJ;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAGE;AAAQ,QAAA,aAAa,EAAC,eAAtB;AAAuC,QAAA,OAAO,EAAE,iBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACL,WAAL,CAAiB,QAAjB,EAA2BK,CAA3B,CAAJ;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAQ,QAAA,aAAa,EAAC,eAAtB;AAAuC,QAAA,OAAO,EAAE,iBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACL,WAAL,CAAiB,SAAjB,EAA4BK,CAA5B,CAAJ;AAAA,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJF,EAME;AAAK,QAAA,aAAa,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAQE;AAAQ,QAAA,aAAa,EAAC,eAAtB;AAAuC,QAAA,OAAO,EAAE,KAAKT,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBARF,CARF,CAJF,CAFF;AA8BD;;;;EArDyBL,S;;AAyD5B,eAAeE,aAAf","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport test from '../../images/test.png'\r\n\r\nclass ThemeSwitcher extends Component {\r\n\r\n  state = { theme: null }\r\n  \r\n  resetTheme = evt => {\r\n    evt.preventDefault();\r\n    this.setState({ theme: null });\r\n  }\r\n  \r\n  chooseTheme = (theme, evt) => {\r\n    evt.preventDefault();\r\n    this.setState({ theme });\r\n  }\r\n\r\n  test = () => {\r\n    console.log(\"hiya\");\r\n  }\r\n  \r\n  render() {\r\n    \r\n    const { theme } = this.state;\r\n    const themeclassName = theme ? theme.toLowerCase() : 'secondary';\r\n    \r\n    return (\r\n      \r\n      <div classNameName=\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\">\r\n      \r\n        <span classNameName={`h1 mb-4 w-100 text-center text-${themeclassName}`}>{ theme || 'Path of Exile' }</span>\r\n        \r\n        <div classNameName=\"btn-group\">\r\n        \r\n          <button  type=\"button\" classNameName={`btn btn-${themeclassName} btn-lg`}>{ theme || 'Choose' } className</button>\r\n          \r\n          <button onClick={this.test} type=\"button\" classNameName={`btn btn-${themeclassName} btn-lg dropdown-toggle dropdown-toggle-split`} data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <span classNameName=\"sr-only\">Toggle Theme Dropdown</span>\r\n          </button>\r\n          \r\n          <div classNameName=\"dropdown-menu\">\r\n          \r\n            <button classNameName=\"dropdown-item\"  onClick={e => this.chooseTheme('Primary', e)}>Primary Theme</button>\r\n            <button classNameName=\"dropdown-item\"  onClick={e => this.chooseTheme('Danger', e)}>Danger Theme</button>\r\n            <button classNameName=\"dropdown-item\"  onClick={e => this.chooseTheme('Success', e)}>Success Theme</button>\r\n            \r\n            <div classNameName=\"dropdown-divider\"></div>\r\n            \r\n            <button classNameName=\"dropdown-item\"  onClick={this.resetTheme}>Default Theme</button>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport default ThemeSwitcher;"]},"metadata":{},"sourceType":"module"}